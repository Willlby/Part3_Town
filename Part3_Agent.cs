using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
public class Part3_Agent : MonoBehaviour
{

    [SerializeField]
    List<GameObject> GoalsList = new List<GameObject>();
    List<GameObject> GameObjectsWithWaypointTag;
    List<Connection> List_Of_Connections = new List<Connection>();

    private AStarManager AStarManager = new AStarManager();
    // The ACO Controller.
    ACOCON MyACOCON = new ACOCON();
    // Array of possible waypoints.
    
    // Connections between nodes.
    private List<ACOConnection> Connections = new List<ACOConnection>();
    // The route generated by the ACO algorith.
    private List<ACOConnection> MyRoute = new List<ACOConnection>();
    // Debug line offset.
    private Vector3 OffSet = new Vector3(0, 0.5f, 0);
    // The Start node for any created route.
    [SerializeField] private GameObject StartNode;
    // The max length of a path created by the ACO.
    [SerializeField] private int MaxPathLength;
    // Start is called before the first frame update
    void Start()
    {
        // Find all the waypoints in the level.
        
        GameObjectsWithWaypointTag = GameObject.FindGameObjectsWithTag("Waypoint").ToList();
        foreach (GameObject waypoint in GameObjectsWithWaypointTag)
        {
            WaypointCON tmpWaypointCon = waypoint.GetComponent<WaypointCON>();
            
            foreach (GameObject tmpWC in tmpWaypointCon.connections)
            {
                Connection tmp = new Connection();
                tmp.FromNode = waypoint;
                tmp.ToNode = tmpWC;
                AStarManager.AddConnection(tmp);
            }
            
        }

        //Creating connections between all goal nodes.

        List <ACOConnection> listOfGoalConnections = new List<ACOConnection>();
        foreach (GameObject goalNode in GoalsList) // Loop through one node.
        {
            foreach (GameObject goalNode_2 in GoalsList) // Looping through other nodes to connect them.
            {
                if (goalNode == goalNode_2)
                {
                    continue;
                }
                else 
                {
                    ACOConnection myACOCon = new ACOConnection();
                    myACOCon.SetConnection(goalNode, goalNode_2, 1.0f);
                    listOfGoalConnections.Add(myACOCon);
                }

            }
        }

        MyRoute = MyACOCON.ACO(150, 50, GameObjectsWithWaypointTag.ToArray(), listOfGoalConnections, StartNode, MaxPathLength);

        foreach (ACOConnection route in MyRoute)
        {

            // Run A Star...
            // List_Of_Connections stores all the connections in the route to the goal / end node of each ACO route.
            List_Of_Connections.AddRange(AStarManager.PathfindAStar(route.FromNode, route.ToNode));

        }
    }

    // Draws debug objects in the editor and during editor play (if option set).
    void OnDrawGizmos()
    {
        // Draw path.
        if (MyRoute.Count > 0)
        {
            foreach (ACOConnection aConnection in MyRoute)
            {
                Gizmos.color = Color.white;
                Gizmos.DrawLine((aConnection.FromNode.transform.position + OffSet),
                (aConnection.ToNode.transform.position + OffSet));
            }
        }
    }
    // Update is called once per frame
    void Update()
    {
    }
}